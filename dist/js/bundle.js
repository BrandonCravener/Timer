!function(n){function e(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}var t={};e.m=n,e.c=t,e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{configurable:!1,enumerable:!0,get:r})},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},e.p="",e(e.s=0)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nvar _runtime = __webpack_require__(1);\n\nvar OfflinePluginRuntime = _interopRequireWildcard(_runtime);\n\nvar _utils = __webpack_require__(2);\n\nvar _timer = __webpack_require__(3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// Check to enable offline plugin\nvar production = false;\n\nif (production) {\n    OfflinePluginRuntime.install();\n}\n\nvar timer = void 0;\n\n// Define variables\nvar beepInterval,\n    lazyLoadElementsLoaded = 0,\n    mainElement = document.getElementsByTagName('main')[0],\n    audioElement = document.getElementById('audio__beep'),\n    textDays = document.getElementById('text__time-days').value,\n    textHours = document.getElementById('text__time-hours').value,\n    stopButton = document.getElementById('button__reset-timer'),\n    textMinutes = document.getElementById('text__time-minutes').value,\n    textSeconds = document.getElementById('text__time-seconds').value,\n    startButton = document.getElementById('button__start-timer'),\n    loaderOverlay = document.getElementById('loading-overlay'),\n    lazyLoadElements = document.getElementsByClassName('lazyLoad'),\n    restartButton = document.getElementById('button__restart-timer'),\n    loaderBackground = document.getElementsByClassName('loader-background')[0];\n\n// Define a function to remove the loader\nfunction removeLoader() {\n    setTimeout(function () {\n        mainElement.removeAttribute('style');\n        if (loaderBackground) {\n            _utils.Utils.addClass(loaderBackground, 'shrink');\n        }\n        if (loaderOverlay) {\n            _utils.Utils.addClass(loaderOverlay, 'hide');\n        }\n        setTimeout(function () {\n            // Remove loading overlay from DOM\n            loaderOverlay.parentNode.removeChild(loaderOverlay);\n        }, 2000);\n    }, 250);\n}\n\n// Function to handle creating a new timer\nfunction defineTimer(time, complete, tick) {\n    console.log(time);\n    timer = new _timer.Timer(time, function () {\n        audioElement.play();\n        beepInterval = setInterval(function () {\n            audioElement.play();\n        }, 2000);\n        if (complete) {\n            complete();\n        }\n    }, function () {\n        if (tick) {\n            tick();\n        }\n    });\n}\n\n// Number handler function\nfunction num(number) {\n    if (number) {\n        if (isNaN(number)) {\n            return 0;\n        } else {\n            return number;\n        }\n    } else {\n        return 0;\n    }\n}\n\n// Itterate through the preload stylesheets and start to load them\nfor (var i = 0; i < lazyLoadElements.length; i++) {\n    var elem = lazyLoadElements[i];\n    if (elem.getAttribute('rel') == 'preload') {\n        elem.setAttribute('rel', 'stylesheet');\n        elem.addEventListener('load', function () {\n            lazyLoadElementsLoaded += 1;\n            // Check if all of the stylesheets are loaded\n            if (lazyLoadElementsLoaded == lazyLoadElements.length) {\n                // Remove loader overlay\n                removeLoader();\n            }\n        });\n    }\n}\n\n// Check for Material Design Components\nif (window.mdc) {\n    // Auto initalize elements\n    mdc.autoInit();\n}\n\n// Check for start button\nif (startButton) {\n    // Register listener\n    startButton.addEventListener('click', function () {\n        if (!timer) {\n            console.log(0);\n            if (num(textDays) + num(textHours) + num(textMinutes) + num(textSeconds) > 0) {\n                console.log(1);\n                var toConvert = [];\n                if (num(textDays)) {\n                    toConvert.push([textDays, 'days']);\n                }\n                if (num(textHours)) {\n                    toConvert.push([textHours, 'hours']);\n                }\n                if (num(textMinutes)) {\n                    toConvert.push([textMinutes, 'minutes']);\n                }\n                if (num(textSeconds)) {\n                    toConvert.push([textSeconds, 'seconds']);\n                }\n                if (toConvert) {\n                    defineTimer(_utils.Utils.processTimeStringArray(toConvert));\n                    if (timer) {\n                        timer.start();\n                    }\n                }\n            }\n        }\n    });\n}\n// Check for stop button\nif (stopButton) {\n    // Reigter listener\n    stopButton.addEventListener('click', function () {\n        if (beepInterval) {\n            clearInterval(beepInterval);\n        }\n        if (timer) {\n            timer = null;\n        }\n    });\n}\n// Check for restart button\nif (restartButton) {\n    // Regsiter listener\n    restartButton.addEventListener('click', function () {\n        if (timer) {\n            // Call method to restrt timer\n            timer.restart();\n        }\n    });\n}\n\nif (_utils.Utils.parseUrlTimeString() && _utils.Utils.parseUrlTimeString().length !== 0) {\n    // Set the timer variable to the new timer\n    defineTimer(_utils.Utils.processTimeStringArray(_utils.Utils.parseUrlTimeString()));\n    // Start the timer\n    if (timer) {\n        timer.start();\n    }\n}\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = 0\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/index.js?")},function(module,exports){eval("var appCacheIframe;\n\nfunction hasSW() {\n  return 'serviceWorker' in navigator &&\n    // This is how I block Chrome 40 and detect Chrome 41, because first has\n    // bugs with history.pustState and/or hashchange\n    (window.fetch || 'imageRendering' in document.documentElement.style) &&\n    (window.location.protocol === 'https:' || window.location.hostname === 'localhost' || window.location.hostname.indexOf('127.') === 0)\n}\n\nfunction install(options) {\n  options || (options = {});\n\n  \n    if (hasSW()) {\n      var registration = navigator.serviceWorker\n        .register(\n          \"sw.js\"\n          \n        );\n\n      \n\n      return;\n    }\n  \n\n  \n}\n\nfunction applyUpdate(callback, errback) {\n  \n\n  \n}\n\nfunction update() {\n  \n    if (hasSW()) {\n      navigator.serviceWorker.getRegistration().then(function(registration) {\n        if (!registration) return;\n        return registration.update();\n      });\n    }\n  \n\n  \n}\n\n\n\nexports.install = install;\nexports.applyUpdate = applyUpdate;\nexports.update = update;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/offline-plugin/runtime.js\n// module id = 1\n// module chunks = 0\n\n//# sourceURL=webpack:///./node_modules/offline-plugin/runtime.js?")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar timeKey = [[['seconds', 'secs', 'second', 'sec'], 1000], [['minutes', 'mins', 'minute', 'min'], 60 * 1000], [['hours', 'hrs', 'hour', 'hr'], 60 * 60 * 1000], [['days', 'day'], 24 * 60 * 60 * 1000]];\n\nvar Utils = exports.Utils = function () {\n    function Utils() {\n        _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, null, [{\n        key: 'addClass',\n        value: function addClass(element, cls) {\n            if (element.className && element.className.length == 0) {\n                element.className = cls;\n            } else if (element.className) {\n                element.className += ' ' + cls;\n            } else if (element.classList) {\n                element.classList.add(cls);\n            }\n        }\n    }, {\n        key: 'removeClass',\n        value: function removeClass(element, cls) {\n            if (element.className) {\n                element.className = element.className.replace(new RegExp('(^|\\\\b)' + element.className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n            } else {\n                element.classList.remove(cls);\n            }\n        }\n    }, {\n        key: 'currentTime',\n        value: function currentTime(ms) {\n            var tabTimeTextArray = [],\n                num,\n                result = {\n                tabTimeText: '',\n                timeText: ''\n            },\n                curPos = ms;\n            if (ms / 1000 / 60 / 60 / 24 > 1) {\n                num = Math.floor(curPos / 1000 / 60 / 60 / 24);\n                result.numDays = num;\n                curPos -= num * 1000 * 60 * 60 * 24;\n                if (num) {\n                    result.timeText += result.numDays + ' days ';\n                    tabTimeTextArray.push(result.numDays + 'd');\n                }\n            }\n            if (ms / 1000 / 60 / 60 > 1) {\n                num = Math.floor(curPos / 1000 / 60 / 60);\n                result.numHours = num;\n                curPos -= num * 1000 * 60 * 60;\n                if (num) {\n                    result.timeText += result.numHours + ' hours ';\n                    tabTimeTextArray.push(result.numHours + 'h');\n                }\n            }\n            if (ms / 1000 / 60 > 1) {\n                num = Math.floor(curPos / 1000 / 60);\n                result.numMinutes = num;\n                curPos -= num * 1000 * 60;\n                if (num) {\n                    result.timeText += result.numMinutes + ' minutes ';\n                    tabTimeTextArray.push(result.numMinutes + 'm');\n                }\n            }\n            if (ms / 1000 >= 1) {\n                num = Math.floor(curPos / 1000);\n                result.numSeconds = num;\n                curPos -= num * 1000;\n                if (num) {\n                    result.timeText += result.numSeconds + ' seconds ';\n                    tabTimeTextArray.push(result.numSeconds + 's');\n                }\n            }\n            for (var i = 0; i < tabTimeTextArray.length; i++) {\n                var unit = tabTimeTextArray[i];\n                result.tabTimeText += unit;\n                if (i !== tabTimeTextArray.length - 1) {\n                    result.tabTimeText += ':';\n                }\n            }\n            return result;\n        }\n    }, {\n        key: 'processTimeStringArray',\n        value: function processTimeStringArray(arr) {\n            var total = 0;\n            arr.forEach(function (timeString) {\n                var unit = timeString[1],\n                    foundUnit = false,\n                    timeInMS;\n                timeKey.forEach(function (conversion) {\n                    var key = conversion[0];\n                    if (key.indexOf(unit) !== -1) {\n                        foundUnit = true;\n                        timeInMS = Number(timeString[0] * conversion[1]);\n                    }\n                });\n                if (foundUnit && timeInMS) {\n                    total += timeInMS;\n                }\n            });\n            return total;\n        }\n    }, {\n        key: 'parseUrlTimeString',\n        value: function parseUrlTimeString() {\n            if (location.search) {\n                var url = decodeURI(location.search.replace('?', '')).toLowerCase();\n                var splitURL = url.match(/\\d*\\D*/ig);\n                var doubleSplitURL = [];\n                splitURL.forEach(function (param) {\n                    if (param.length > 0) {\n                        var doubleSplit = param.match(/\\d+|\\D+/ig);\n                        if (doubleSplit.length == 2) {\n                            doubleSplitURL.push(doubleSplit);\n                        }\n                    }\n                });\n                return doubleSplitURL;\n            }\n        }\n    }]);\n\n    return Utils;\n}();\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utils.js\n// module id = 2\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/utils.js?")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar Timer = exports.Timer = function () {\n    function Timer(ms, complete, tick) {\n        _classCallCheck(this, Timer);\n\n        this.time = ms;\n        this.currentTime = ms;\n        this.completeCB = complete;\n        this.tickCB = tick;\n        this.finishTimeout;\n    }\n\n    _createClass(Timer, [{\n        key: "start",\n        value: function start() {\n            var _this = this;\n\n            this.activeTimer = setInterval(function () {\n                _this.currentTime -= 1000;\n                _this.tickCB();\n            }, 1000);\n            this.finishTimeout = setInterval(function () {\n                if (_this.activeTimer) {\n                    clearInterval(_this.activeTimer);\n                }\n                _this.reset();\n                _this.completeCB();\n            }, this.time);\n        }\n    }, {\n        key: "reset",\n        value: function reset() {\n            if (this.finishTimeout) {\n                clearTimeout(finishTimeout);\n            }\n            if (this.activeTimer) {\n                clearInterval(activeTimer);\n            }\n            this.currentTime = this.ms;\n        }\n    }, {\n        key: "restart",\n        value: function restart() {\n            this.reset();\n            this.start();\n        }\n    }]);\n\n    return Timer;\n}();\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timer.js\n// module id = 3\n// module chunks = 0\n\n//# sourceURL=webpack:///./src/timer.js?')}]);